* Introduction
* Bibliography
* Journal 
* Week 2 Mar 2017
** Acheived things (Preparing Work environment)
  - Install a virtual machine (linux distribution) thanks to VirtualBox. 
  - Couldn't resize virtual machine display correctly. 
  - Install Simgrid
  - Install emacs and Org mode (for more details see [[http://orgmode.org/]]). 
** Remained issues 
  - Couldn't resize virtual machine display correctly.
  - PC issues : Sometimes I couldn't log in.
** Current work (Become a friend with Simgrid and its features)
  - Read SimGrid references.
       - [[http://simgrid.gforge.inria.fr/tutorials.php]]
       - [[http://simgrid.gforge.inria.fr/documentation.php]]
  - Learn how to use Simgrid.
  - Use MSG.
* Week 3 & 4 Mar 2017
** Current work 
  - Change msg OOP C to C++ OOP.
  - Construct UML Diagram for OOP C : to do so, I installed Eclipse Luna version and it modeling tools (see [[https://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/neon/1a/eclipse-java-neon-1a-linux-gtk-x86_64.tar.gz]] and [[https://www.eclipse.org/downloads/packages/eclipse-modeling-tools/neon3]]).
** Remarks 
  - Dead link [[https://gitlab.inria.fr/simgrid/simgrid/tree/master/doc/examples/platforms]]. (Fixed)
* Week 1-3 Apr 2017
** What's done
  - Construct a first heiarchical class tree on C++ OOP.
** Remained of issues (Current activity)
  - Some cases of test didn't work. (fixed)
** Dev sheet (self-remainder) 
    There are some tools/techniques that I have used lately in particular 
  - ((nice make -j 4 || make ) && nice ctest -j 4 --output-on-failure ; date) 2>&1 | tee BuilSimGrid.sh.log
    nice command to run a program with modified scheduling priority.
  - valgind 
* Week 4 Apr 2017
** What's done 
  - fix all issues that were unable to run correctly.
** Current work 
  - Search how to build a suitable forum to simgrid website: for that, the first idea is about searching for several free open source that can fill our needs (as Kunena). 
* Week 1 May 2017
** Current work
  - Install lamp to work on localhost environment : for that it's useful for the first user to follow the instructions that are given on the following website : [[https://www.linode.com/docs/web-servers/lamp/lamp-on-debian-8-jessie]].     
  - We will attempt to use Mybb a free open source that give the possibility to have a forum interface on static website ( for more info : [[https://mybb.com/]]).
** Remained of issues
  - After getting mybb as a worthy open-source forum to test, my supervisor told me that we didn't have the right to install mysql on the servers, wich unable us to use mybb. 
* Week 2 May 2017
** Current work 
  - I'm tring to fix the problem of tesh-smpi-replay-ti-tracing.
  - Work on SD_exit issue (see the remark).
  - Attend Martin's meetings this week :
  + SimgridVerif project with Marie and Samuel.
  + PhD matrin's student. 
  + Betsegow internship subject : Betsegow and Martin have developed an energy model and they use use it on simgrid and ns-3 software that is developed also by 
    the co-supervisor of Betsegow with theirs students.
  - Attend to Martin's meeting with his PhD student (friday afternoon)   
** Remainder 
    To have a good use of git and understand how workflow git works see the following link [[https://help.github.com/articles/what-is-a-good-git-workflow/]]
    and there is another belongs to gitlab that i found more useful [[https://about.gitlab.com/2014/09/29/gitlab-flow/]]
** Remarks
  - I tried to resolve the issue that is posted on github (see the link [[https://github.com/simgrid/simgrid/issues/3]]), so I changed SD_exit to be like MSG_exit and I seems that 
    all work well.
  - I took two days of holiday (wednesday and Thursday) to present HPC work. 
** Notes : 
  + lto : for optimization and inlinization of function.
  + lua : allowed to do programming stuf on xml code
  + maintainer_mode : to analizing xml files.
* Week 3 May 2017
  + Attend meetings with Martin and having an overview about Betsegow internship and what he did.
  + Read Matrin PhD student's paper about checking models (see doc file).
  + Firday meeting all the day with martin and his PhD student. (where this last has suggested incomplete idea to deal with conflects).
* Week 4 May 2017
   Holiday.
* Week 1 Jun 2017
** Current work : 
  - Try to fix memory leak due to trace model (Done)
  - Use signal 'callsback' on sg_ functions.
* Week 2 Jun 2017
** Current Work : 
  - Use a Netpoint signal for sg_instr_new_router function. (Done)
  - Correct the leak of memory that correspond to StartLinkEvent. (Done)
  - Correct the leak of memory that correspond to EndLinkEvent. (Done)
  - Define oncreation and onSeal modules for netZone structure. (Done)
  - applied a signal for sg_instr_new_router. (almost done - tests didn't work)
** Meetings :
  - Tuesday afternoon 1H30 : Meeting with samuel, Marie, and Martin about simgridverif.
  notes :
 Marie wrote a memory overflow probability based on textual syntax of Hasl. In order to evaluate how implement it in the system that we want to create.
  From a first look, the syntax appears a little bit complicated to pose nicely. And as an effect, the code that Samuel has given during the meeting present 
  an interesting attempt to do the job in the python language. Furthermore, to get an output of a little DSL, and avoid parsing problem in the same occasion. 
  - Include netzone reference to sg_instr_AS_begin.  
* Week 3 Jun 2017
** Current work : 
  - observator_(partron_de_conception)
  - Read some ref about Pajé and pajéng. 
*** Clean useless class of events.
    The cleaning was done by steps. First of all, we looked for the events that verify the below critera : 
  + the constructor of an event is used in one place
  + if it use print and delete.
    The selected events were cleaned and theirs constructors are turned to a functions. 
*** Notes about visualization 101 :  
  - 13p : how to use API.
  - Categorizing Resource Utilization can be done by Declaring a trace categories, Classify (MSG, SimDAG) tasks.
  - Registering User Variables and States.
*** Events : 
  - Attend to Scientific English Workshop day (Thursday)
  - Friday was a Day off for a personal matter.   
* Week 4 Jun 2017
** Current work 
  - Clean another event and switch its constructor into function. (done)
  - Install eclipse. (done)
*** Notes about configure Simgrid (virtualization) 
  - Selecting the virtualization factory could be done throught the use of containers, also called context. This latter could be selected in order to use it 
  with the contexts/factory configuration item.  
  - see ref. Configure SimGrid in particular (context factory) see the following link [[http://simgrid.gforge.inria.fr/simgrid/3.16/doc/options.html]].
  - run msg example : 
  as an example, I took app-chainsend example, and I run the following command : 
  ./chainsend ./../../../../examples/platforms/small_platform.xml ../../../../examples/msg/app-chainsend/app-chainsend_d.xml   
  as an output one got a file *.trace that could be visualized via pj-gantt, viva,..etc.
** Notes : 
  - Trace module can be used to trace any simgrid simulation and it give a pajetrace outputfile.
  - Categorie allowed to know who use the computation ressources.   
** Events :
  - Two days off (Tuesday and wednesday) for a personal matter.   
** Remark : 
    Unfortunately, pajeng didn't work, and the visualization with viva wasn't understandable (2 warrning messages).
* Week 5 Jun 2017
** Current work 
  - Investigate visualization implementation in simgrid.
  - trying to resolve issues due to sg_instr_new_router changes.
** NOTES
  - To use gdb with valgrind see the following link [[https://fau.re/blog/20140330_vgdb.html]].
  - To change the eclipse's theme see [[https://www.youtube.com/watch?v=a-vRRoQAnR0]].
  - Debian paste zone [[http://paste.debian.net/]].
  - debuging see the following link [[https://fau.re/blog/20140330_vgdb.html]] : make trace-categories -j 4 &&  valgrind --vgdb=yes --vgdb-error=0 /home/boubehziz/simgrid/build/examples/msg/trace-categories/trace-categories --cfg=tracing:yes --cfg=tracing/buffer:yes --cfg=tracing/filename:categories.trace --cfg=tracing/categorized:yes --cfg=tracing/uncategorized:yes --cfg=viva/categorized:categories.cat.plist --cfg=viva/uncategorized:categories.uncat.plist /home/boubehziz/simgrid/examples/platforms/small_platform.xml /home/boubehziz/simgrid/examples/platforms/../msg/app-masterworker/app-masterworker_d.xml
  - After that : valgrind will ask to run gdb ./..
  - target remote | vgdb
** Events :
  - Days off (monday) for a personal matter. 
* Week 1 Jul 2017
** Current work
  - Follow corsera's courses, corsera class [[https://www.coursera.org/learn/c-plus-plus-a]]. (week 1 to week 3 done)   
  - Analyze stanford courses and follow it, follow course about debugin in C [[https://courseware.stanford.edu/pg/courses/lectures/371747]] 
  - Fork SMPI_CourseWare space from [[https://github.com/simgrid/SMPI_CourseWare]]. (Done)
  - Find bug and unclear formulation [[https://simgrid.github.io/SMPI_CourseWare/]]. (All right)
** Notes : 
  - gdb tutorial : [[https://courseware.stanford.edu/pg/pages/view/332668/cs107-guide-to-gdb]]
  - valgrind tutorial : [[https://courseware.stanford.edu/pg/pages/view/332678/cs107-guide-to-valgrind]]
*** Coursera's courses :
  - C++ as a Better C. (done)
  - Basics of Generics and Classes. (done)
  - C++ and OO; Lists. (done)
  - Minimum Spanning Tree & Standard Template Library.
** Events : 
  - Attend Anna's PhD defense (Thursday).
  - medical check-up requested by INRIA (Friday).
* Week 2 Jul 2017
** Current work 
  - Check SMPI_CourseWare examples on the new release 3.16 of simgrid.   
  - Read [[ http://simgrid.gforge.inria.fr/simgrid/3.17/doc/uhood_tech.html]]
** Notes 
  - Sonar could be an useful tools for the manifactoring of simgrid [[https://sonarcloud.io/dashboard?id=simgrid]].
  - Correct SMPI_Corseware pages.
* Week 3 Jul 2017
** Current work
  - Make some optimizations of instr code.
  - Install PlantUML [[https://marketplace.visualstudio.com/items?itemName=jebbs.plantuml]] and [[http://plantuml.com/]]
  - change Pj_values to a class.
  - Read [[https://github.com/mquinson/prog_scala/blob/master/01-OOP-design/OOP-design.pdf]] and [[https://github.com/mquinson/C-2nd-language/blob/master/TDP/11-OOP-dipoles/OOP-dipoles.pdf]].
  - Add report an issues and contact us link [[http://simgrid.gforge.inria.fr/simgrid/latest/doc/community.html#community_contact]]. (Done but not yet tested)
** Notes : 
  - An important notion in OOP is the" singleton. To have an idea see the following link [[http://come-david.developpez.com/tutoriels/dps/?page=Singleton]].
* Week 4 Jul 2017
** Current work
  - Make some optimization in the code of trace.
  - Remove c allocation for value constructor and use cpp allocation instead.
  - Learn about singleton notion in OOP.
* Week 1 Aug 2017
** Current work
  - Change c allocation everwhere and replace it by cpp allocation.
  - Dessiner un CRC formel.
  - Add contact page to courseware. 
* Week 2 Aug 2017
** Current work 
  - Remove event class that aren't used anymore.
  - Give s_type class a constructor and a destructor.  
  - Follow Coursera's courses about algorithms [[https://www.coursera.org/learn/algorithms-part1]] and [[https://www.coursera.org/learn/algorithms-part2]]
** Notes : 
  - Coursera book [[http://algs4.cs.princeton.edu/home/]]
* Week 3 Aug 2017
** Current work
  - Normalize class notation (i.e. s_type -> Type, type_t->Type*, s_type_get->get).
  - Give methods and constructors to s_type, s_container,value.
  - Correct some issues located by sonar.
  - Follow Stacks courses on coursera.
  - Check that SMPI_Corseware examples work with the new version of simgrid 3.16 (It's not the cas).
* Week 4 Aug 2017
  - Convert MSG examples to S4U platform ( the main idea, is tu pick the examples that have a pedagogy spirit. For that, We'v to do it properly
  and adding a documentation in order to get the code the explicite form possible).
  - For each example, We'v add a description of the example and make it easy to reach in the documentation.
* Week 1 Sept 2017
  - Convert async-waitall, async-waitany.
  - Add a descrption of the added examples to the manual. 
* Week 2 Sept 2017
  - Debug s4u-async (wait, waitall, and waitany) examples and pass to s4u-energy examples
  - Start to prepear the slids and the report to the conference of the 28th september at INRIA. 
* Week 3 Sept 2017
  - Work on the slides and its schemes (CRC, UML,..etc) for the ADT day.
  - Debug s4u-energy-onoff and read about SimGrid testing process.
  - Complete the slides according the given remarks.
* Week 4 Sept 2017
  - Prepear the speech for the presentation.
  - Follow the lasts change on github "memory leak is in the lowest level ever".
  - Debug s4u-wait.
** Notes : 
  - The manual of MSG could be found via the following link : [[http://simgrid.gforge.inria.fr/simgrid/latest/doc/group__msg__examples.html]], 
  - The manual of S4U could be found via the following link : [[http://simgrid.gforge.inria.fr/simgrid/latest/doc/group__s4u__examples.html]],
  - The way to add an example is explained via the link : [[http://simgrid.gforge.inria.fr/simgrid/latest/doc/inside_tests.html#inside_tests_add_integration]]
  -  #+BEGIN_SRC C++
      double* task = static_cast<double*>(mailbox->get());
      xbt_assert(task != nullptr, "mailbox->get() failed");
      double comp_size = *task;
      delete task;
      if (comp_size < 0) { /* - Exit when -1.0 is received */
        XBT_INFO("I'm done. See you!");
        break;
      }
      /*  - Otherwise, process the task */
      simgrid::s4u::this_actor::execute(comp_size);
    #+END_SRC

    #+BEGIN_SRC C
    XBT_INFO("Wait to receive a task");
    msg_task_t task = NULL;
    msg_comm_t comm = MSG_task_irecv(&task, mailbox);
    msg_error_t res = MSG_comm_wait(comm, -1);
    xbt_assert(res == MSG_OK, "MSG_task_get failed");
    MSG_comm_destroy(comm);
    XBT_INFO("Received \"%s\"", MSG_task_get_name(task));
    if (strcmp(MSG_task_get_name(task), "finalize") == 0) {
      MSG_task_destroy(task);
      break;
    }

    XBT_INFO("Processing \"%s\"", MSG_task_get_name(task));
    MSG_task_execute(task);
    XBT_INFO("\"%s\" done", MSG_task_get_name(task));
    MSG_task_destroy(task);
    #+END_SRC