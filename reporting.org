* Introduction
* Bibliography
* Journal 
* Week 2 Mar 2017
** Acheived things (Preparing Work environment)
  - Install a virtual machine (linux distribution) thanks to VirtualBox. 
  - Couldn't resize virtual machine display correctly. 
  - Install Simgrid
  - Install emacs and Org mode (for more details see [[http://orgmode.org/]]). 
** Remained issues 
  - Couldn't resize virtual machine display correctly.
  - PC issues : Sometimes I couldn't log in.
** Current work (Become a friend with Simgrid and its features)
  - Read SimGrid references.
       - [[http://simgrid.gforge.inria.fr/tutorials.php]]
       - [[http://simgrid.gforge.inria.fr/documentation.php]]
  - Learn how to use Simgrid.
  - Use MSG.
* Week 3 & 4 Mar 2017
** Current work 
  - Change msg OOP C to C++ OOP.
  - Construct UML Diagram for OOP C : to do so, I installed Eclipse Luna version and it modeling tools (see [[https://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/neon/1a/eclipse-java-neon-1a-linux-gtk-x86_64.tar.gz]] and [[https://www.eclipse.org/downloads/packages/eclipse-modeling-tools/neon3]]).
** Remarks 
  - Dead link [[https://gitlab.inria.fr/simgrid/simgrid/tree/master/doc/examples/platforms]]. (Fixed)
* Week 1-3 Apr 2017
** What's done
  - Construct a first heiarchical class tree on C++ OOP.
** Remained of issues (Current activity)
  - Some cases of test didn't work. (fixed)
** Dev sheet (self-remainder) 
    There are some tools/techniques that I have used lately in particular 
  - ((nice make -j 4 || make ) && nice ctest -j 4 --output-on-failure ; date) 2>&1 | tee BuilSimGrid.sh.log
    nice command to run a program with modified scheduling priority.
  - valgind 
* Week 4 Apr 2017
** What's done 
  - fix all issues that were unable to run correctly.
** Current work 
  - Search how to build a suitable forum to simgrid website: for that, the first idea is about searching for several free open source that can fill our needs (as Kunena). 
* Week 1 May 2017
** Current work
  - Install lamp to work on localhost environment : for that it's useful for the first user to follow the instructions that are given on the following website : [[https://www.linode.com/docs/web-servers/lamp/lamp-on-debian-8-jessie]].     
  - We will attempt to use Mybb a free open source that give the possibility to have a forum interface on static website ( for more info : [[https://mybb.com/]]).
** Remained of issues
  - After getting mybb as a worthy open-source forum to test, my supervisor told me that we didn't have the right to install mysql on the servers, wich unable us to use mybb. 
* Week 2 May 2017
** Current work 
  - I'm tring to fix the problem of tesh-smpi-replay-ti-tracing.
  - Work on SD_exit issue (see the remark).
  - Attend Martin's meetings this week :
  + SimgridVerif project with Marie and Samuel.
  + PhD matrin's student. 
  + Betsegow internship subject : Betsegow and Martin have developed an energy model and they use use it on simgrid and ns-3 software that is developed also by 
    the co-supervisor of Betsegow with theirs students.
  - Attend to Martin's meeting with his PhD student (friday afternoon)   
** Remainder 
    To have a good use of git and understand how workflow git works see the following link [[https://help.github.com/articles/what-is-a-good-git-workflow/]]
    and there is another belongs to gitlab that i found more useful [[https://about.gitlab.com/2014/09/29/gitlab-flow/]]
** Remarks
  - I tried to resolve the issue that is posted on github (see the link [[https://github.com/simgrid/simgrid/issues/3]]), so I changed SD_exit to be like MSG_exit and I seems that 
    all work well.
  - I took two days of holiday (wednesday and Thursday) to present HPC work. 
** Notes : 
  + lto : for optimization and inlinization of function.
  + lua : allowed to do programming stuf on xml code
  + maintainer_mode : to analizing xml files.
* Week 3 May 2017
  + Attend meetings with Martin and having an overview about Betsegow internship and what he did.
  + Read Matrin PhD student's paper about checking models (see doc file).
  + Firday meeting all the day with martin and his PhD student. (where this last has suggested incomplete idea to deal with conflects).
* Week 4 May 2017
   Holiday.
* Week 1 Jun 2017
** Current work : 
  - Try to fix memory leak due to trace model (Done)
  - Use signal 'callsback' on sg_ functions.
* Week 2 Jun 2017
** Current Work : 
  - Use a Netpoint signal for sg_instr_new_router function. (Done)
  - Correct the leak of memory that correspond to StartLinkEvent. (Done)
  - Correct the leak of memory that correspond to EndLinkEvent. (Done)
  - Define oncreation and onSeal modules for netZone structure. (Done)
  - applied a signal for sg_instr_new_router. (almost done - tests didn't work)
** Meetings :
  - Tuesday afternoon 1H30 : Meeting with samuel, Marie, and Martin about simgridverif.
  notes :
 Marie wrote a memory overflow probability based on textual syntax of Hasl. In order to evaluate how implement it in the system that we want to create.
  From a first look, the syntax appears a little bit complicated to pose nicely. And as an effect, the code that Samuel has given during the meeting present 
  an interesting attempt to do the job in the python language. Furthermore, to get an output of a little DSL, and avoid parsing problem in the same occasion. 
  - Include netzone reference to sg_instr_AS_begin.  
* Week 3 Jun 2017
** Current work : 
  - observator_(partron_de_conception)
  - Read some ref about Pajé and pajéng. 
*** Clean useless class of events.
    The cleaning was done by steps. First of all, we looked for the events that verify the below critera : 
  + the constructor of an event is used in one place
  + if it use print and delete.
    The selected events were cleaned and theirs constructors are turned to a functions. 
*** Notes about visualization 101 :  
  - 13p : how to use API.
  - Categorizing Resource Utilization can be done by Declaring a trace categories, Classify (MSG, SimDAG) tasks.
  - Registering User Variables and States.
*** Events : 
  - Attend to Scientific English Workshop day (Thursday)
  - Friday was a Day off for a personal matter.   
* Week 4 Jun 2017
** Current work 
  - Clean another event and switch its constructor into function. (done)
  - Install eclipse. (done)
*** Notes about configure Simgrid (virtualization) 
  - Selecting the virtualization factory could be done throught the use of containers, also called context. This latter could be selected in order to use it 
  with the contexts/factory configuration item.  
  - see ref. Configure SimGrid in particular (context factory) see the following link [[http://simgrid.gforge.inria.fr/simgrid/3.16/doc/options.html]].
  - run msg example : 
  as an example, I took app-chainsend example, and I run the following command : 
  ./chainsend ./../../../../examples/platforms/small_platform.xml ../../../../examples/msg/app-chainsend/app-chainsend_d.xml   
  as an output one got a file *.trace that could be visualized via pj-gantt, viva,..etc.
** Notes : 
  - Trace module can be used to trace any simgrid simulation and it give a pajetrace outputfile.
  - Categorie allowed to know who use the computation ressources.   
** Events :
  - Two days off (Tuesday and wednesday) for a personal matter.   
** Remark : 
    Unfortunately, pajeng didn't work, and the visualization with viva wasn't understandable (2 warrning messages).
* Week 5 Jun 2017
** Current work 
  - Investigate visualization implementation in simgrid.
  - trying to resolve issues due to sg_instr_new_router changes.
** NOTES
  - To use gdb with valgrind see the following link [[https://fau.re/blog/20140330_vgdb.html]].
  - To change the eclipse's theme see [[https://www.youtube.com/watch?v=a-vRRoQAnR0]].
  - Debian paste zone [[http://paste.debian.net/]].
  - debuging see the following link [[https://fau.re/blog/20140330_vgdb.html]] : make trace-categories -j 4 &&  valgrind --vgdb=yes --vgdb-error=0 /home/boubehziz/simgrid/build/examples/msg/trace-categories/trace-categories --cfg=tracing:yes --cfg=tracing/buffer:yes --cfg=tracing/filename:categories.trace --cfg=tracing/categorized:yes --cfg=tracing/uncategorized:yes --cfg=viva/categorized:categories.cat.plist --cfg=viva/uncategorized:categories.uncat.plist /home/boubehziz/simgrid/examples/platforms/small_platform.xml /home/boubehziz/simgrid/examples/platforms/../msg/app-masterworker/app-masterworker_d.xml
  - After that : valgrind will ask to run gdb ./..
  - target remote | vgdb
** Events :
  - Days off (monday) for a personal matter. 
* Week 1 Jul 2017
** Current work
  - Follow corsera's courses, corsera class [[https://www.coursera.org/learn/c-plus-plus-a]]. (week 1 to week 3 done)   
  - Analyze stanford courses and follow it, follow course about debugin in C [[https://courseware.stanford.edu/pg/courses/lectures/371747]] 
  - Fork SMPI_CourseWare space from [[https://github.com/simgrid/SMPI_CourseWare]]. (Done)
  - Find bug and unclear formulation [[https://simgrid.github.io/SMPI_CourseWare/]]. (All right)
** Notes : 
  - gdb tutorial : [[https://courseware.stanford.edu/pg/pages/view/332668/cs107-guide-to-gdb]]
  - valgrind tutorial : [[https://courseware.stanford.edu/pg/pages/view/332678/cs107-guide-to-valgrind]]
*** Coursera's courses :
  - C++ as a Better C. (done)
  - Basics of Generics and Classes. (done)
  - C++ and OO; Lists. (done)
  - Minimum Spanning Tree & Standard Template Library.
** Events : 
  - Attend Anna's PhD defense (Thursday).
  - medical check-up requested by INRIA (Friday).
* Week 2 Jul 2017
** Current work 
  - Check SMPI_CourseWare examples on the new release 3.16 of simgrid.   
  - Read [[ http://simgrid.gforge.inria.fr/simgrid/3.17/doc/uhood_tech.html]]
** Notes 
  - Sonar could be an useful tools for the manifactoring of simgrid [[https://sonarcloud.io/dashboard?id=simgrid]].
  - Correct SMPI_Corseware pages.
* Week 3 Jul 2017
** Current work
  - Make some optimizations of instr code.
  - Install PlantUML [[https://marketplace.visualstudio.com/items?itemName=jebbs.plantuml]] and [[http://plantuml.com/]]
  - change Pj_values to a class.
  - Read [[https://github.com/mquinson/prog_scala/blob/master/01-OOP-design/OOP-design.pdf]] and [[https://github.com/mquinson/C-2nd-language/blob/master/TDP/11-OOP-dipoles/OOP-dipoles.pdf]].
  - Add report an issues and contact us link [[http://simgrid.gforge.inria.fr/simgrid/latest/doc/community.html#community_contact]]. (Done but not yet tested)
** Notes : 
  - An important notion in OOP is the" singleton. To have an idea see the following link [[http://come-david.developpez.com/tutoriels/dps/?page=Singleton]].
* Week 4 Jul 2017
** Current work
  - Make some optimization in the code of trace.
  - Remove c allocation for value constructor and use cpp allocation instead.
  - Learn about singleton notion in OOP.
* Week 1 Aug 2017
** Current work
  - Change c allocation everwhere and replace it by cpp allocation.
  - Dessiner un CRC formel.
  - Add contact page to courseware. 
* Week 2 Aug 2017
** Current work 
  - Remove event class that aren't used anymore.
  - Give s_type class a constructor and a destructor.  
  - Follow Coursera's courses about algorithms [[https://www.coursera.org/learn/algorithms-part1]] and [[https://www.coursera.org/learn/algorithms-part2]]
** Notes : 
  - Coursera book [[http://algs4.cs.princeton.edu/home/]]
* Week 3 Aug 2017
** Current work
  - Normalize class notation (i.e. s_type -> Type, type_t->Type*, s_type_get->get).
  - Give methods and constructors to s_type, s_container,value.
  - Correct some issues located by sonar.
  - Follow Stacks courses on coursera.
  - Check that SMPI_Corseware examples work with the new version of simgrid 3.16 (It's not the cas).
* Week 4 Aug 2017
  - Convert MSG examples to S4U platform ( the main idea, is tu pick the examples that have a pedagogy spirit. For that, We'v to do it properly
  and adding a documentation in order to get the code the explicite form possible).
  - For each example, We'v add a description of the example and make it easy to reach in the documentation.
* Week 1 Sept 2017
  - Convert async-waitall, async-waitany.
  - Add a descrption of the added examples to the manual. 
* Week 2 Sept 2017
  - Debug s4u-async (wait, waitall, and waitany) examples and pass to s4u-energy examples
  - Start to prepear the slids and the report to the conference of the 28th september at INRIA. 
* Week 3 Sept 2017
  - Work on the slides and its schemes (CRC, UML,..etc) for the ADT day.
  - Debug s4u-energy-onoff and read about SimGrid testing process.
  - Complete the slides according the given remarks.
* Week 4 Sept 2017
  - Prepear the speech for the presentation.
  - Follow the lasts change on github "memory leak is in the lowest level ever".
  - Debug s4u-wait.
** Notes : 
  - The manual of MSG could be found via the following link : [[http://simgrid.gforge.inria.fr/simgrid/latest/doc/group__msg__examples.html][msg_examples]], 
  - The manual of S4U could be found via the following link : [[http://simgrid.gforge.inria.fr/simgrid/latest/doc/group__s4u__examples.html][s4u_examples]],
  - The way to add an example is explained via the link : [[http://simgrid.gforge.inria.fr/simgrid/latest/doc/inside_tests.html#inside_tests_add_integration]]

* Week 1 Oct 2017
  - Convert actor-execute actor-startkilltime s4u-wait to s4u API
** Notes : 
- cloud : 
cloud-masterworker could-migration clou-simple cloud-two-tasks
- energy :
energy-consumption energy-pstate energy-pstack energy-vm
- trace :
 trace-categories trace-host-user-variables trace-lin-user-variables trace-link-user-variables
trace-masterworker trace-platform trace-route-user-variables
- io : 
 io-file io-remote io-storage 
- process (actor) : 
process-join process-join process-yield 
- others : 
platform-faitures platform-properties task-priority maestro-set mc network-ns3 app-chainsend 
* Week 2 Oct 2017
- Debug energy-onoff, actor-join and actor-yield example.
- seminar INRIA 12-13. 
* Week 3 Oct 2017
- Build semaphore example in the same spirit of mutex example.
- Complete actor-priority example and suggest a additional function that takes the actor priority in count.
* Week 4 Oct - 1 Nov 2017
- Out of office. 
** Notes : 
- cloud examples for s4u API isn't possible for the moment of reason that some basic functionalities of s4u APIs are not yet available. 
* Week 2 Nov 2017
- Write s4u-test-any example that ends when at least one of the vectors ends.
** Study the issues : 
- #233 : [[https://github.com/google/benchmark]] check if it possible tu use google bench to show graphicaly the evolution of simgrid.
[[https://github.com/google/benchmark/blob/master/docs/tools.md]].
- #194 : test-any example.
- #189 : Energy consumption of parallel tasks.
* Week 3 Nov 2017
- Simgrid user's days - location : Le Bono.
- the days were started by a general presentation of simgrid performed by Martin Quinson in monday afternoon.
- 2nd day, we had at the morning a presentation about tracing model performed by Arnaud.
- energy-pstate is successfully converted to s4u API.
- 3rd day, we had at the morngin a presentation about context switching performed by Martin.
- New mission : test benchmark examples of mantevo, NERSC-8/ Trinity and CORAL-Benchmark with smpi and make testing report on issue report on github. [[https://asc.llnl.gov/CORAL-benchmarks/][CORAL-Benchmark]], [[http://www.nersc.gov/users/computational-systems/cori/nersc-8-procurement/trinity-nersc-8-rfp/nersc-8-trinity-benchmarks/][trinity-nersc]], and [[https://mantevo.org/download/][mantevo]]
* Week 4 Nov 2017
** Study benchmark examples
* Week 1 Dec 2017
- Day off for the afternoon of monday.
- Working on synchro-semaphore example.
** Learn Grid5000
- to get started : [[https://www.grid5000.fr/mediawiki/index.php/Getting_Started]]
- a grid500 tutorial, there is a library called EnOSLib that allowed to deploy an applications on grid'5000 : [[http://enoslib.readthedocs.io/en/latest/tutorials/grid5000.html]] 
* Week 2 Dec 2017
- Tring to build an org mode file that handle all the steps mentioned below.
- Attend the conference about Sociotechnical Investigations of Scientific Software, Collaboration & Infrastructure. The conference was done on wednesday at 2pm.
- From Thursday until friday morning (now), Grid5000 is off of service.
- Testing CORAL-benchmark (Bigsort, CORAL MPI-benchmarks, IO).
- Day off for the morning of Thursday.
** Friday meeting brefing :
- Make a table for the benchmak codes with theirs status.
- Learn about trampline to use emacs with grid5000.
- Read the following report : [[https://github.com/mquinson/simgrid-simpar/blob/master/report.org][ssh_report]]
- configure .ssh/config to make an automated connection to grid5000.
- try to use ssh -x then ssh emacs to call emacs from the local machine.
** Grid5000 Notes :
- to see the rent jobs : oarstat -u 
- the workline on grid5000 is the following : 
0) Get connected : ssh login@access.grid5000.fr
1) choose a site  (Grenoble, Rennes, Nancy, ...) : ssh rennes 
2) reserve ressources and deploy :oarsub -I -l nodes=1,walltime=1:45 -t deploy
3) Install an OS : kadeploy3 -f $OAR_NODE_FILE -e debian9-x64-nfs -k
4) Connect to the node as root : ssh -l root parasilo-28.rennes.grid5000.fr
5) apt-get update && apt-get install cmake make gcc git libboost-dev libgct++ libpcre3-dev linux-tools gdb liblua5.1-0-dev libdwarf-dev libunwind7-dev valgrind libsigc++
* Week 3 Dec 2017
** Notes : 
0) configure .ssh/config file to allowed the connection to grid5000 automatically.
a) 
#+begin_src sh
# Alias for the gateway (not really needed, but convenient)
Host g5k
  User g5k_login
  Hostname access.grid5000.fr
  ForwardAgent no
# Automatic connection to hosts within Grid'5000, and not reachable direction on SSH tcp port 22
Host *.g5k
  User g5k_login
  ProxyCommand ssh g5k -W "`basename %h .g5k`:%p"
  ForwardAgent no
#+end_src
b) then the access to the frontend could be done through a terminal as following :
#+begin_src sh
  ssh [-X] grenoble.g5k
#+end_src
c) launch bash script to make a deployment  
#+begin_src sh
  chmod +x dep.sh # for the first time.
  ./dep.sh
#+end_src
where dep.sh : 
#+begin_src sh
  oarsub -I -l nodes=1,walltime=1:45 -t deploy
  kadeploy3 -f $OAR_NODE_FILE -e debian9-x64-nfs -k
#+end_src
 Visibly, kadeploy3 doesn't work through dep.sh
d) After runing kadeploy3, launch bash script to download simgrid and install linux tools.
#+begin_src sh
  chmod +x after-dep.sh # for the first time.
  ./after-dep.sh
#+end_src
where after-dep.sh has the following commands : 
#+begin_src sh
  mkdir Simgrid 
  scp -r tboubehziz@rennes.grid5000.fr:~/simgrid/* Simgrid/
  ssh root -l 'cat $OAR_NODE_FILE'
  apt-get update && apt-get install cmake make gcc git libboost-dev libgct++ libpcre3-dev linux-tools gdb liblua5.1-0-dev libdwarf-dev libunwind7-dev valgrind libsigc++
  cd Simgrid/
  cmake -Denable_compile_optimizations=ON -Denable_supernovae=OFF -Denable_compile_warnings=OFF -Denable_debug=OFF -Denable_gtnets=OFF -Denable_jedule=OFF -Denable_latency_bound_tracking=OFF -Denable_lua=OFF -Denable_model-checking=OFF -Denable_smpi=OFF -Denable_tracing=OFF -Denable_documentation=OFF .
  make && make install
#+end_src
* Week 4 Dec 2017
- Out of office.
* Week 1-2 Jan 2018
- Analyze benchmark codes and select the ones who could be run only with MPI.
- Test and run the selected benchmark for MPI.
* Week 3 Jan 2018
- Test and run the selected benchmark for SMPI.
- Creat a new repository called [[https://github.com/Takishipp/SMPI-benchmarks][SMPI-benchmarks]] that contain un org mode file. Through this latter one can launch the download of each benchmark and make the necessary changes that allow to run it with smpi.
- The [[https://github.com/Takishipp/SMPI-benchmarks/blob/master/main.org][org mode file]] contain also an organized table for all the candidate benchmark codes with a brief description.
- Half-day off for the afternoon of thursday.
* Week 4 Jan 2018
- Complete the homogeneization of the [[https://github.com/Takishipp/SMPI-benchmarks][SMPI-benchmarks]] scripts.
- Test and add more of examples from the [[https://repository.prace-ri.eu/git/PRACE/CodeVault][CodeVault]] platform.
- Test Luca's [[https://github.com/simgrid/simgrid/issues/252][script]] that allow to determine the list of the unimplimented MPI's functions on SimGrid.
- Add a description and a README.org to [[https://github.com/Takishipp/SMPI-benchmarks][SMPI-benchmarks]] repository on github.
- Include a table of code to the README.
* Week 1 Feb 2018
- Add legend to README to give meaning to symboles.
- In the ref raw, the link to the compilation take the symbole of compilation instructions.
- The link to the code turn to a glyph package.
- The list of the unconsidered benchmarks.
- install jenkins [[https://wiki.jenkins.io/display/JENKINS/Installing+Jenkins+on+Ubuntu][:book:]]. 
http://localhost:8080.
The passework is reachable through "sudo vi .jenkins/secrets/initialAdminPassword".
- Add a new SMPI-Benchmarks job to jenkins that will be checked everyday.
* Week 2-3 Feb 2018
- Check the list called "à Revoir" and add the apps that work to the list of SMPI-proxy-apps.
- Add MiniFE of Trinity-Nersc - MPI version.
- Make an array that contains the apps that couldn't be used with their dependency issues.
- To know how launch scripts from org file mode.
   - [[https://orgmode.org/manual/Extracting-source-code.html#Extracting-source-code][Extracting source code]]
   - [[https://emacs.stackexchange.com/questions/27126/is-it-possible-to-org-bable-tangle-an-org-file-from-the-command-line][how org bable tangle an org file from the command line]]
   - [[https://stackoverflow.com/questions/46295511/how-to-run-org-mode-commands-from-shell][How to run org mode commands from shell]]
* Week 4 Fab 2018
- Trying to correct apps on jenkins and make some improvments on [[https://github.com/simgrid/SMPI-proxy-apps][SMPI-proxy-apps]] repository.
  - Add http://proxyapps.exascaleproject.org/ecp-suite/ tests
* Week 1-2 Mar 2018
- Make some test running with smpi and correct theirs issues.
- Adjust Readme.
* Week 3-4 Mar 2018
- Add MiniDFT and MILC to jenkins test list.
- Make some cosmetics and delete useless columns from the readme and solt apps by family
- try to get work some disabled apps (UPC-FC, Miniaero, SWFFT, MACSio) that require dependecies.
- Open 3 bug issue on github and add a beetle emoji on readme file beside the specific app.
- Update the status of jenkins tests on the readme.
* Week 1 Apr 2018 
  - Reduce execution time.
  - Manque des apps qui compilent pas en local: MiniAero, MACSio,
  - Voir si SWFFT a besoin de FFTW3 avec ou sans MPI
  - Continuer à ouvrir des bugs, et faire des liens

* Week 3-4 Apr 2018
- Move apps to ECP.
- Remove MPI columns.
- Use Patchs instead of cp.
- Lister les patchs sur la page de garde, avec un lien clicable
- Afficher l'image sur la page principale :
  - https://ci.inria.fr/simgrid/job/SMPI-proxy-apps/test/trend
* Week 1 May 2018 
- Use Patchs and make some adjustments.
* Week 2-4 May 2018 
Out of office.
* Week 5 May 2018 
- Reading [[https://www.geosci-model-dev-discuss.net/gmd-2017-301/gmd-2017-301.pdf][Simulation of the Performance and Scalability of MPi Communications of Atmospheric Models running on Exascale Supercomputers]] article.
** Notice about comments of Meteo france paper : 
- SST/macro provides the best cost/accuracy trade-off simulation for large-scale disctributed applications.
- SST/macro has three network models : the analytical model transfers, the packet-level model PISCES, and the flow-level model.
- Compared to the SimGrid simulator, the packet-level model of SST/macro produces almost indentical results.
- SST/macro online simulation is very similar to the TraceR simulation.
- SST/macro provides several topologies of the interconnect network.
- SST/macro can reduce the memory footpring per node, its parallel efficiency degrades if more cores are used.
- Large-scale application needs a large amount of memory for computation. A large amount of memory for the message buffers is usually required for MPI communications.
SST/macro can operate with null buffers, the message buffer is set to null in the skeleton application, which significantly reduces the size of memroy required by the simulation of communication. (p11)
- SST/macro cannot simulate the burst algorithm for more than 2X10⁴ MPI processes because the burst messages result in huge events and large memory footprint(p19).
- They modified SST/macro to create a gloval variable and attach the shared memory to this global variable. (p11)
- The skeleton programs, scripts, and the modified version of SST/marco 7.1.0 for the simulations presented the paper are available at [[https://zenodo.org/record/1066934#.Ww0vSByxU5k][modified_SST/macro]]
** Notice about simgrid website : 
- Home page should write simgrid home page .
- The title is so big.
* Week 1 June
- Time Management Training (4-5 june).
- Newcomers seminar in Paris (6-8 june).
* Week 2 June
- Fix mpimemu execution issue with the help of the author.
- Work on MeteoFrance test codes (one of the 3 tests is pushed on SMPI repository), but for the other according to the author, It couldn't be done without using shared memory.
* Week 3 June 
- Read [[https://hal.inria.fr/hal-01544827/document][Capacity planning ofSupercomputers : Simulating MPI applications at scale]] paper.
- Tried to turn MeteoFrance test codes by replace malloc/free by SMPI_SHARED_MALLOC/SMPI_SHARED_FREE.
- Team meeting (wednesday 4pm-5:15pm). 
* Week 4 June
- Fix MeteoFrance test codes with the help of C.Degomme.
- Connection issue prevents me to connect on grid5000 (persmission denied).
- Tried to turn these tests on grid5000.
- Training Unity-3D (Friday 9:30am - 6:30pm).
* Week 1-2 July
- Update the links that point out on github repositories.
- Specify which package of Hdf5 library is used for MiniGhost and LSMS apps.
- Find what has change in SST/macro by MeteoFrance researchers. 
* Week 3-4 July
- Extract all MeteoFrance changes that were applied on sstmacro simulator.
- Preparing SST/macro and its environment ([[https://github.com/sstsimulator/sst-macro/blob/master/docs/manual/manual.md][SST/macro's tutorial]])
- Fix my machine.
** note
  Refrence is given by mt : How using a libraries in SMPI (look [[http://simgrid.gforge.inria.fr/simgrid/latest/doc/options.html#options_smpi_privatize_libs][link]])
* Week 1-2 Aug
- (not yet) Make a similar study to Meteofrance/Halo paper.
- Test Halo benchmark with sst-macro is failed (see findings file).
- Test Transpose benchmak with simgrid is failed.
- Trying to fix Kripke ECP benchmark.
- Friday morning : out of office.
* Week 3-4 Aug
- Monday afternoon & Tuesday : out of office.
- Kripke git repository cannot be used instead of zip file. I couldn't compile it without OpenMP.
- Search how measuring communication time (trace module didn't allowed me to get the values as I wish)
* Week 1 Sep 
- Restudy the benchmaks that use omp and try to run them according to MPI_THREAD_FUNNELED way.
- Training day in tuesday. 
